version: 2.1

executors:
  ubuntu:
    docker:
      - image: ubuntu:18.04

commands:
  setup_terraform:
    description: "Install and update all the required packages to install terraform"
    steps:
      - run:
          name: "Upgrade all the Ubuntu packages"
          command: |
            apt update
            apt upgrade --yes
      - run:
          name: "Install wget and unzip"
          command: apt install wget unzip --yes
      - run:
          name: "Download the Terraform ZIP"
          command: wget https://releases.hashicorp.com/terraform/0.12.19/terraform_0.12.19_linux_amd64.zip
      - run:
          name: "Unzip terraform_0.12.19_linux_amd64.zip and move to /usr/bin"
          command: |
            unzip terraform_0.12.19_linux_amd64.zip
            mv terraform /usr/bin
      - run:
          name: "Show the Terraform version"
          command: terraform -v
      - run:
          name: "Initialize Terraform"
          command: terraform init

jobs:
  validate:
    executor: ubuntu
    steps:
      - checkout
      - setup_terraform
      - run:
          name: "Validate the Infrastructure"
          command: terraform validate
  plan:
    executor: ubuntu
    steps:
      - checkout
      - setup_terraform
      - run:
          name: "Show the Infrastructure Plan"
          command: |
            terraform plan \
            -var aws_access_key_id=$AWS_ACCESS_KEY_ID \
            -var aws_secret_access_key=$AWS_SECRET_ACCESS_KEY
  apply:
    executor: ubuntu
    steps:
      - checkout
      - setup_terraform
      - run:
          name: "Apply the Infrastructure Plan"
          command: |
            terraform apply \
            -auto-approve \
            -var aws_access_key_id=$AWS_ACCESS_KEY_ID \
            -var aws_secret_access_key=$AWS_SECRET_ACCESS_KEY

workflows:
  version: 2

  development:
    jobs:
      - validate:
          filters:
            branches:
              ignore: master
      - plan:
          filters:
            branches:
              ignore: master
          requires:
            - validate
  production:
    jobs:
      - validate:
          filters:
            branches:
              only: master
      - plan:
          filters:
            branches:
              only: master
          requires:
            - validate
      - apply:
          filters:
            branches:
              only: master
          requires:
            - validate
            - plan